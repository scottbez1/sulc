/*

NOTE:
THIS FILE IS AUTOMATICALLY GENERATED

TO MODIFY:
Edit webcolors.csv and run generateColorNames.py to regenerate this file.

*/




/*
###########################################
#     Simple USB LED Controller - SULC    #
#        Copyright 5012 Scott Bezek       #
###########################################
*/

/*
    This file is part of SULC.

    SULC is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SULC is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SULC.  If not, see <http://www.gnu.org/licenses/>
*/



#ifndef _COLOR_NAMES_H
#define _COLOR_NAMES_H

#include <avr/pgmspace.h>


typedef struct {
    const uint8_t name_len;
    const uint8_t r;
    const uint8_t g;
    const uint8_t b;
} Color;


const Color colors[] PROGMEM = {
    {3,0,0,0},
    {9,120,124,127},
    {12,125,117,107},
    {4,0,127,127},
    {10,63,127,106},
    {5,120,127,127},
    {5,122,122,110},
    {6,127,114,98},
    {5,0,0,0},
    {14,127,117,102},
    {4,0,0,127},
    {10,69,21,113},
    {5,82,21,21},
    {9,111,92,67},
    {9,47,79,80},
    {10,63,127,0},
    {9,105,52,15},
    {5,127,63,40},
    {14,50,74,118},
    {8,127,124,110},
    {7,110,10,30},
    {4,0,127,127},
    {8,0,0,69},
    {8,0,69,69},
    {13,92,67,5},
    {8,84,84,84},
    {9,0,50,0},
    {9,94,91,53},
    {11,69,0,69},
    {14,42,53,23},
    {10,127,70,0},
    {10,76,25,102},
    {7,69,0,0},
    {10,116,75,61},
    {12,71,94,71},
    {13,36,30,69},
    {13,23,39,39},
    {13,0,103,104},
    {10,74,0,105},
    {8,127,10,73},
    {11,0,95,127},
    {7,52,52,52},
    {10,15,72,127},
    {9,89,17,17},
    {11,127,125,120},
    {11,17,69,17},
    {7,127,0,127},
    {9,110,110,110},
    {10,124,124,127},
    {4,127,107,0},
    {9,109,82,16},
    {4,64,64,64},
    {5,0,64,0},
    {11,86,127,23},
    {8,120,127,120},
    {7,127,52,90},
    {9,102,46,46},
    {6,37,0,65},
    {5,127,127,120},
    {5,120,115,70},
    {8,115,115,125},
    {13,127,120,122},
    {9,62,126,0},
    {12,127,125,102},
    {9,86,108,115},
    {10,120,64,64},
    {9,112,127,127},
    {20,125,125,105},
    {10,72,119,72},
    {9,105,105,105},
    {9,127,91,96},
    {11,127,80,61},
    {13,16,89,85},
    {12,67,103,125},
    {14,59,68,76},
    {14,88,98,111},
    {11,127,127,112},
    {4,0,127,0},
    {9,25,102,25},
    {5,125,120,115},
    {7,127,0,127},
    {6,64,0,0},
    {16,51,102,85},
    {10,0,0,102},
    {12,93,42,105},
    {12,73,56,109},
    {14,30,89,56},
    {15,61,52,119},
    {17,0,125,77},
    {15,36,104,102},
    {15,99,10,66},
    {12,12,12,56},
    {9,122,127,125},
    {9,127,114,112},
    {8,127,114,90},
    {11,127,111,86},
    {4,0,0,64},
    {7,126,122,115},
    {5,64,64,0},
    {9,53,71,17},
    {6,127,82,0},
    {9,127,34,0},
    {6,109,56,107},
    {13,119,116,85},
    {9,76,125,76},
    {13,87,119,119},
    {13,109,56,73},
    {10,127,119,106},
    {9,127,109,92},
    {4,102,66,31},
    {4,127,96,101},
    {4,110,80,110},
    {10,88,112,115},
    {6,64,0,64},
    {3,127,0,0},
    {9,94,71,71},
    {9,32,52,112},
    {11,69,34,9},
    {6,125,64,57},
    {10,122,82,48},
    {8,23,69,43},
    {8,127,122,119},
    {6,80,41,22},
    {6,96,96,96},
    {7,67,103,117},
    {9,53,45,102},
    {9,56,64,72},
    {4,127,125,125},
    {11,0,127,63},
    {9,35,65,90},
    {3,105,90,70},
    {4,0,64,64},
    {7,108,95,108},
    {6,127,49,35},
    {9,32,112,104},
    {6,119,65,119},
    {5,122,111,89},
    {5,127,127,127},
    {10,122,122,122},
    {6,127,127,0},
    {11,77,102,25},

};


const char COLOR_NAMES[] PROGMEM = "offaliceblueantiquewhiteaquaaquamarineazurebeigebisqueblackblanchedalmondbluebluevioletbrownburlywoodcadetbluechartreusechocolatecoralcornflowerbluecornsilkcrimsoncyandarkbluedarkcyandarkgoldenroddarkgraydarkgreendarkkhakidarkmagentadarkolivegreendarkorangedarkorchiddarkreddarksalmondarkseagreendarkslatebluedarkslategraydarkturquoisedarkvioletdeeppinkdeepskybluedimgraydodgerbluefirebrickfloralwhiteforestgreenfuchsiagainsboroghostwhitegoldgoldenrodgraygreengreenyellowhoneydewhotpinkindianredindigoivorykhakilavenderlavenderblushlawngreenlemonchiffonlightbluelightcorallightcyanlightgoldenrodyellowlightgreenlightgraylightpinklightsalmonlightseagreenlightskybluelightslategraylightsteelbluelightyellowlimelimegreenlinenmagentamaroonmediumaquamarinemediumbluemediumorchidmediumpurplemediumseagreenmediumslatebluemediumspringgreenmediumturquoisemediumvioletredmidnightbluemintcreammistyrosemoccasinnavajowhitenavyoldlaceoliveolivedraborangeorangeredorchidpalegoldenrodpalegreenpaleturquoisepalevioletredpapayawhippeachpuffperupinkplumpowderbluepurpleredrosybrownroyalbluesaddlebrownsalmonsandybrownseagreenseashellsiennasilverskyblueslateblueslategraysnowspringgreensteelbluetantealthistletomatoturquoisevioletwheatwhitewhitesmokeyellowyellowgreen";


#define NUM_COLORS (sizeof(colors)/sizeof(Color))

#endif
